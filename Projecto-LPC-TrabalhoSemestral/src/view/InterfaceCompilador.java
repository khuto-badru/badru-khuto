/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.Controller;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.event.AdjustmentEvent;
import java.awt.event.AdjustmentListener;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class InterfaceCompilador extends javax.swing.JFrame {

    private Controller controller;

    /**
     * Creates new form InterfaceCompilador
     */
    public InterfaceCompilador() {
        initComponents();
        controller = new Controller();
        jLabelLineCount.setEditable(false);
        jLabelLineCount.setFocusable(false);
        jScrollPane3.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane3.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jScrollPane2.setVerticalScrollBar(scrollBarCustom1);

        JScrollPane sourceCodeScrollPane = (JScrollPane) jScrollPane2;
        JScrollBar verticalScrollBar = sourceCodeScrollPane.getVerticalScrollBar();
        //verticalScrollBar.addAdjustmentListener(e -> updateLineCount());
        /// implementacao para poder fazer sicronizacao de scroll bar
        verticalScrollBar.addAdjustmentListener(new AdjustmentListener() {
            @Override
            public void adjustmentValueChanged(AdjustmentEvent e) {
                int value = verticalScrollBar.getValue();
                jScrollPane3.getVerticalScrollBar().setValue(value);
            }
        });

        jText_Source_Code.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateLineCount();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateLineCount();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }
        });
    }

    // metodo para contar linhas 
    private void updateLineCount() {
        String text = jText_Source_Code.getText();
        StringBuilder lineNumbers = new StringBuilder();
        int lineCount = text.isEmpty() ? 0 : text.split("\n", -1).length;
        for (int i = 1; i <= lineCount; i++) {
            lineNumbers.append(i).append("\n");
        }

        jLabelLineCount.setText(lineNumbers.toString());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        fButton3 = new view.FButton();
        fButton2 = new view.FButton();
        fButton1 = new view.FButton();
        btn_run = new view.FButton();
        btn_open = new view.FButton();
        btn_help = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jText_Source_Code = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_tokens = new view.TableDark();
        jScrollPane4 = new javax.swing.JScrollPane();
        jText_Saida = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jLabelLineCount = new javax.swing.JTextArea();
        scrollBarCustom1 = new view.ScrollBarCustom();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(17, 48, 70));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBackground(new java.awt.Color(50, 30, 30));
        jPanel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 153, 0));
        jLabel1.setText("Compilador LÃ©xico(Mini-Pascal)");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons8-android-studio-50.png"))); // NOI18N

        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel2MouseExited(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icons8-exit-25.png"))); // NOI18N
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLabel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLabel4MouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        fButton3.setText("Help");

        fButton2.setText("save");
        fButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fButton2ActionPerformed(evt);
            }
        });

        fButton1.setText("CLean");
        fButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fButton1ActionPerformed(evt);
            }
        });

        btn_run.setText("Run");
        btn_run.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_runMouseClicked(evt);
            }
        });
        btn_run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_runActionPerformed(evt);
            }
        });

        btn_open.setText("Open");
        btn_open.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_openMouseClicked(evt);
            }
        });
        btn_open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_openActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 592, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 683, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(btn_open, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_run, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(fButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_open, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_run, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(fButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        btn_help.setBackground(new java.awt.Color(50, 50, 50));

        jScrollPane2.setBorder(javax.swing.BorderFactory.createTitledBorder("Entrada de Codigo Fonte"));

        jText_Source_Code.setBackground(new java.awt.Color(50, 50, 50));
        jText_Source_Code.setColumns(20);
        jText_Source_Code.setForeground(new java.awt.Color(255, 255, 255));
        jText_Source_Code.setRows(5);
        jText_Source_Code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jText_Source_CodeKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jText_Source_Code);

        table_tokens.setForeground(new java.awt.Color(255, 255, 255));
        table_tokens.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "       TOKEN", "       LEXEMA", "       LINHA"
            }
        ));
        table_tokens.setSelectionBackground(new java.awt.Color(52, 152, 219));
        jScrollPane1.setViewportView(table_tokens);
        if (table_tokens.getColumnModel().getColumnCount() > 0) {
            table_tokens.getColumnModel().getColumn(0).setHeaderValue("       TOKEN");
            table_tokens.getColumnModel().getColumn(1).setHeaderValue("       LEXEMA");
            table_tokens.getColumnModel().getColumn(2).setHeaderValue("       LINHA");
        }

        jText_Saida.setBackground(new java.awt.Color(50, 50, 50));
        jText_Saida.setColumns(20);
        jText_Saida.setForeground(new java.awt.Color(255, 255, 255));
        jText_Saida.setRows(5);
        jScrollPane4.setViewportView(jText_Saida);
        jText_Saida.getAccessibleContext().setAccessibleName("");

        jLabelLineCount.setBackground(new java.awt.Color(50, 50, 50));
        jLabelLineCount.setColumns(20);
        jLabelLineCount.setForeground(new java.awt.Color(255, 255, 255));
        jLabelLineCount.setRows(5);
        jScrollPane3.setViewportView(jLabelLineCount);

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SaÃ­da");

        javax.swing.GroupLayout btn_helpLayout = new javax.swing.GroupLayout(btn_help);
        btn_help.setLayout(btn_helpLayout);
        btn_helpLayout.setHorizontalGroup(
            btn_helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_helpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btn_helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(btn_helpLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(btn_helpLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 978, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrollBarCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        btn_helpLayout.setVerticalGroup(
            btn_helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btn_helpLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btn_helpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1)
                    .addGroup(btn_helpLayout.createSequentialGroup()
                        .addComponent(scrollBarCustom1, javax.swing.GroupLayout.PREFERRED_SIZE, 463, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, btn_helpLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(btn_help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(btn_help, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jPanel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseExited
        Dimension originalSize = jPanel2.getPreferredSize();
        jPanel2.setSize(originalSize);
        jPanel2.setBackground(new Color(30, 30, 30));
    }//GEN-LAST:event_jPanel2MouseExited

    private void jPanel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseEntered
        Dimension originalSize = jPanel2.getSize();
        int increasedWidth = (int) (originalSize.width * 1.1); // Increase width by 10%
        int increasedHeight = (int) (originalSize.height * 1.1); // Increase height by 10%
        jPanel2.setSize(new Dimension(increasedWidth, increasedHeight));
        jPanel2.setBackground(new Color(50, 50, 50));
    }//GEN-LAST:event_jPanel2MouseEntered

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        dispose();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jLabel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseExited
        jLabel4.setForeground(Color.BLACK); // Reset text color to black
        jLabel4.setFont(jLabel4.getFont().deriveFont(Font.PLAIN, 14)); // Reset font size to 14 and remove bold
        jLabel4.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jLabel4MouseExited

    private void jLabel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseEntered
        jLabel4.setForeground(new Color(50, 50, 50)); // Change text color to 50,50,50
        jLabel4.setFont(jLabel4.getFont().deriveFont(Font.BOLD, 16)); // Increase font size to 16 and make it bold
        jLabel4.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_jLabel4MouseEntered

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

        dispose();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void jText_Source_CodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jText_Source_CodeKeyTyped

    }//GEN-LAST:event_jText_Source_CodeKeyTyped

    private void btn_openMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_openMouseClicked

    }//GEN-LAST:event_btn_openMouseClicked

    private void btn_openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_openActionPerformed
        // Cria uma instÃ¢ncia do JFileChooser
        JFileChooser fileChooser = new JFileChooser();

        // Exibe o diÃ¡logo de seleÃ§Ã£o de arquivo
        int result = fileChooser.showOpenDialog(this);

        // Verifica se o usuÃ¡rio selecionou um arquivo
        if (result == JFileChooser.APPROVE_OPTION) {
            // ObtÃ©m o arquivo selecionado pelo usuÃ¡rio
            File selectedFile = fileChooser.getSelectedFile();

            try {
                // Cria um BufferedReader para ler o conteÃºdo do arquivo
                BufferedReader reader = new BufferedReader(new FileReader(selectedFile));

                // Cria uma StringBuilder para armazenar o conteÃºdo do arquivo
                StringBuilder content = new StringBuilder();
                String line;

                // LÃª cada linha do arquivo e a adiciona Ã  StringBuilder
                while ((line = reader.readLine()) != null) {
                    content.append(line).append("\n");
                }

                // Fecha o BufferedReader
                reader.close();

                // ObtÃ©m o conteÃºdo do arquivo como uma String
                String fileContent = content.toString();

                // Exibe o conteÃºdo do arquivo no JTextArea
                jText_Source_Code.setText(fileContent);
            } catch (IOException ex) {
                // Trata qualquer exceÃ§Ã£o de leitura do arquivo
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_openActionPerformed

    private void btn_runMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_runMouseClicked

    }//GEN-LAST:event_btn_runMouseClicked

    private void fButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButton1ActionPerformed
        jText_Source_Code.setText("");
        limparTabela();
    }//GEN-LAST:event_fButton1ActionPerformed

    private void fButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fButton2ActionPerformed
        // ObtÃ©m o texto do JTextArea
        String codigo = jText_Source_Code.getText();

        // Cria um seletor de arquivos
        JFileChooser fileChooser = new JFileChooser();

        // Mostra a caixa de diÃ¡logo para salvar o arquivo
        int result = fileChooser.showSaveDialog(this);

        // Verifica se o usuÃ¡rio selecionou um local para salvar o arquivo
        if (result == JFileChooser.APPROVE_OPTION) {
            // ObtÃ©m o arquivo selecionado pelo usuÃ¡rio
            File arquivo = fileChooser.getSelectedFile();

            try {
                // Cria um BufferedWriter para escrever no arquivo
                BufferedWriter writer = new BufferedWriter(new FileWriter(arquivo));

                // Escreve o cÃ³digo no arquivo
                writer.write(codigo);

                // Fecha o BufferedWriter
                writer.close();

                // Exibe uma mensagem de sucesso
                JOptionPane.showMessageDialog(this, "CÃ³digo salvo com sucesso!");

            } catch (IOException ex) {
                // Trata exceÃ§Ãµes de IO
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao salvar o cÃ³digo.");
            }
        }
    }//GEN-LAST:event_fButton2ActionPerformed

    private void btn_runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_runActionPerformed
        /* String sourceCode = jText_Source_Code.getText().trim(); // ObtÃ©m o texto do JTextArea e remove espaÃ§os em branco extras

        if (sourceCode.isEmpty()) {
            // Se o campo de texto estiver vazio, exibe uma mensagem
            jText_Saida.setText("Por favor, introduza um cÃ³digo.");
        } else {
            // Se o campo de texto nÃ£o estiver vazio, executa o cÃ³digo
            long startTime = System.currentTimeMillis(); // ObtÃ©m o tempo inicial

            try {
                Controller controller = new Controller();
                limparTabela();

                sourceCode = " " + sourceCode + " "; // Adiciona espaÃ§os em branco antes e depois do cÃ³digo
                sourceCode = sourceCode.replaceAll("([\\[\\]{}();:,.])", " $1 "); // Adiciona espaÃ§os em branco antes e depois dos delimitadores
                controller.setTokens(sourceCode); // Define os tokens usando o cÃ³digo-fonte
                controller.preencherTabela(table_tokens); // Preenche a tabela com os resultados da anÃ¡lise lÃ©xica

                long endTime = System.currentTimeMillis(); // ObtÃ©m o tempo final
                long executionTime = endTime - startTime; // Calcula o tempo de execuÃ§Ã£o em milissegundos

                // Exibe o tempo de execuÃ§Ã£o na interface
                jText_Saida.setText("Tempo de ExecuÃ§Ã£o: " + executionTime + " ms");
            } catch (Exception e) {
                // Captura e exibe detalhes sobre o erro ocorrido
                jText_Saida.setText("Erro durante a execuÃ§Ã£o: " + e.getMessage());
                e.printStackTrace();
            }
        }*/

        String sourceCode = jText_Source_Code.getText().trim(); // ObtÃ©m o texto do JTextArea e remove espaÃ§os em branco extras

if (sourceCode.isEmpty()) {
    // Se o campo de texto estiver vazio, exibe uma mensagem
    jText_Saida.setText("Por favor, introduza um cÃ³digo.");
} else {
    // Se o campo de texto nÃ£o estiver vazio, executa o cÃ³digo
    long startTime = System.currentTimeMillis(); // ObtÃ©m o tempo inicial

    try {
        Controller controller = new Controller();
        limparTabela();

        // Adiciona espaÃ§os em branco antes e depois do cÃ³digo
        sourceCode = " " + sourceCode + " ";

        // Adiciona espaÃ§os em branco antes e depois dos delimitadores
        // Aqui ajustamos a expressÃ£o regular para tratar os sinais ':' e '=' juntos como um Ãºnico sinal
        sourceCode = sourceCode.replaceAll("([\\[\\]{}();,.-]|(?<=[:=])(?!=)|(?<![:=])(?=[:=]))", " $1 ");

        controller.setTokens(sourceCode); // Define os tokens usando o cÃ³digo-fonte
        controller.preencherTabela(table_tokens); // Preenche a tabela com os resultados da anÃ¡lise lÃ©xica

        long endTime = System.currentTimeMillis(); // ObtÃ©m o tempo final
        long executionTime = endTime - startTime; // Calcula o tempo de execuÃ§Ã£o em milissegundos

        // Exibe o tempo de execuÃ§Ã£o na interface
        jText_Saida.setText("Tempo de ExecuÃ§Ã£o: " + executionTime + " ms");
    } catch (Exception e) {
        // Captura e exibe detalhes sobre o erro ocorrido
        jText_Saida.setText("Erro durante a execuÃ§Ã£o: " + e.getMessage());
        e.printStackTrace();
    }
}

    }//GEN-LAST:event_btn_runActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfaceCompilador.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfaceCompilador().setVisible(true);
                
                

            }
        });
        
        
    }

    // MÃ©todos extras
    public void limparTabela() {
        DefaultTableModel model = (DefaultTableModel) table_tokens.getModel();
        model.setRowCount(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel btn_help;
    private view.FButton btn_open;
    private view.FButton btn_run;
    private view.FButton fButton1;
    private view.FButton fButton2;
    private view.FButton fButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextArea jLabelLineCount;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea jText_Saida;
    public javax.swing.JTextArea jText_Source_Code;
    private view.ScrollBarCustom scrollBarCustom1;
    private view.TableDark table_tokens;
    // End of variables declaration//GEN-END:variables
}
